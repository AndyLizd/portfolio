[{"G:\\projects\\personal web\\portfolio-react\\src\\index.js":"1","G:\\projects\\personal web\\portfolio-react\\src\\reportWebVitals.js":"2","G:\\projects\\personal web\\portfolio-react\\src\\App.js":"3","G:\\projects\\personal web\\portfolio-react\\src\\main.jsx":"4","G:\\projects\\personal web\\portfolio-react\\src\\boxConfig.js":"5","G:\\projects\\personal web\\portfolio-react\\src\\features\\glider.jsx":"6","G:\\projects\\personal web\\portfolio-react\\src\\features\\sfdispatch.jsx":"7","G:\\projects\\personal web\\portfolio-react\\src\\features\\recommender.jsx":"8","G:\\projects\\personal web\\portfolio-react\\src\\features\\ganart.jsx":"9","G:\\projects\\personal web\\portfolio-react\\src\\features\\starlink.jsx":"10","G:\\projects\\personal web\\portfolio-react\\src\\features\\template.jsx":"11","G:\\projects\\personal web\\portfolio-react\\src\\features\\features.jsx":"12"},{"size":501,"mtime":1609986944436,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":3555,"mtime":1610143270303,"results":"16","hashOfConfig":"14"},{"size":8180,"mtime":1610143544588,"results":"17","hashOfConfig":"14"},{"size":5088,"mtime":1609874458045,"results":"18","hashOfConfig":"14"},{"size":1027,"mtime":1609724183198,"results":"19","hashOfConfig":"20"},{"size":365,"mtime":1609704378267,"results":"21","hashOfConfig":"20"},{"size":369,"mtime":1609704356495,"results":"22","hashOfConfig":"20"},{"size":349,"mtime":1609704338287,"results":"23","hashOfConfig":"20"},{"size":359,"mtime":1609704442755,"results":"24","hashOfConfig":"20"},{"size":712,"mtime":1609864830266,"results":"25","hashOfConfig":"14"},{"size":12951,"mtime":1610145289561,"results":"26","hashOfConfig":"14"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"174tsr7",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"29"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"1anx02i",{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"29"},"G:\\projects\\personal web\\portfolio-react\\src\\index.js",[],["62","63"],"G:\\projects\\personal web\\portfolio-react\\src\\reportWebVitals.js",[],"G:\\projects\\personal web\\portfolio-react\\src\\App.js",["64","65"],"import Main from './main';\r\nimport {Features, educationAnimate, skillsAnimate, sfdispatchAnimate, recommenderAnimate, starlinkAnimate, gliderAnimate, ganartAnimate} from './features/features'\r\nimport React, {useEffect, useRef, useState} from 'react'\r\n\r\nimport gsap from \"gsap\";\r\nimport ScrollTrigger from 'gsap/ScrollTrigger'\r\nimport Scrollbar from 'smooth-scrollbar';\r\n\r\nimport \"./App.css\";\r\n\r\nconst smoothScrollSetup = (mainRef) => {\r\n\tconst container = mainRef.current;\r\n\r\n\t// specifiy to use the mainRef element's scrollbar, \r\n\tconst bodyScrollbar = Scrollbar.init(container, {damping: 0.03, delegateTo: container});\r\n\tbodyScrollbar.track.yAxis.element.remove();\r\n\tbodyScrollbar.track.xAxis.element.remove();\r\n  \r\n\tScrollTrigger.scrollerProxy(container, {\r\n\t\tscrollTop(value) {\r\n\t\t\tif (arguments.length) {\r\n\t\t\t\tbodyScrollbar.scrollTop = value;\r\n\t\t\t}\r\n\t\t\treturn bodyScrollbar.scrollTop;\r\n\t\t},\r\n\t\tgetBoundingClientRect() {\r\n\t\t\treturn {top: 0, left: 0, width: window.innerWidth, height: window.innerHeight};\r\n\t\t}\r\n\t});\r\n\r\n\t// optimize the performance of scroll, without it, the pin functionality is terrible\r\n\tbodyScrollbar.addListener(ScrollTrigger.update);\r\n\r\n\t// since we are using the scrollbar of scrollable, we need to\r\n\t// add {scroller: '.scrollable'} to every ScrollTrigger,\r\n\t// an easy way to do it is ...\r\n\tScrollTrigger.defaults({scroller: '.scrollable'});  \r\n}\r\n\r\nconst onScroll = (e) => {\r\n  console.log(e);\r\n}\r\n\r\nfunction App() {\r\n  const mainRef = useRef(null);\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [navHighlight, setNavHighlight] = useState(false);\r\n  const [navScroll, setNavScroll] = useState(false);\r\n  \r\n  useEffect(() => {\r\n    // disable animation and scrolling at the openning\r\n    setTimeout(() => {\r\n      setLoading(false)\r\n      setNavHighlight(true);\r\n      setNavScroll(true);\r\n\r\n      \r\n      gsap.registerPlugin(ScrollTrigger);\r\n      smoothScrollSetup(mainRef);\r\n\r\n      \r\n      const scrollT = {\r\n        trigger: '#navScroll',\r\n        scrub: false,\r\n        markers: false,\r\n        start: '-20 top',\r\n        end: '120 top',\r\n        scroller: '.scrollable'\r\n      };\r\n      \r\n      const tl = gsap.timeline();\r\n      tl.from('#navScroll', {duration: 1.0, opacity: 0.0, delay:0.15})\r\n      .from('#highlight', {duration: 1.0, opacity: 0.0,})\r\n      gsap.to('.nav-helper', {duration: 2, scrollTrigger: scrollT, opacity: 0});\r\n      \r\n      educationAnimate();\r\n      skillsAnimate();\r\n      sfdispatchAnimate();\r\n      recommenderAnimate();\r\n      starlinkAnimate();\t\t\r\n      gliderAnimate();\r\n      ganartAnimate();\r\n      \r\n    }, 5000)\r\n  }, [])\r\n\r\n  return (\r\n    <div ref={mainRef} className='scrollable' onScroll={(e) => onScroll(e)}>\r\n      {/* new user nav-helper */}\r\n      <div className='nav-helper'>\r\n        {\r\n          navHighlight?\r\n            <div id=\"highlight\" style={{top: '93vh', left: '50vw'}}>\r\n              scroll\r\n              <img src='img/arrow.png' style={{transform: 'rotate(180deg)'}}></img>\r\n              for details\r\n            </div>\r\n          :\r\n            <></>\r\n        }\r\n        {\r\n          navScroll?\r\n            <div id=\"navScroll\" style={{top: '25vh', left: '50vw'}}>\r\n              project highlight\r\n              <img src='img/arrow.png' style={{transform: 'rotate(120deg) translate(40%, -15%)'}}></img>\r\n            </div>\r\n          :\r\n            <></>\r\n        }\r\n      </div>\r\n\r\n      < Main />\r\n      {\r\n        loading?\r\n        <></>\r\n        : \r\n        < Features props={{}}/>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","G:\\projects\\personal web\\portfolio-react\\src\\main.jsx",["66","67","68","69","70","71","72"],"import React, { useState, useEffect } from \"react\";\r\nimport gsap from \"gsap\";\r\nimport ScrollTrigger from 'gsap/ScrollTrigger'\r\nimport Scrollbar from 'smooth-scrollbar';\r\nimport 'boxicons';\r\n\r\nimport \"./main.css\";\r\nimport config from \"./boxConfig\";\r\n\r\nimport Features from './features/features';\r\n\r\n// config\r\nconst boxCount = config.length;\r\nconst defaultBoxWidth = '9vh';\r\nconst defaultBoxHeight = '34vh';\r\nconst selectedBoxWidth = '40vh'; \r\nconst selectedBoxHeight = selectedBoxWidth; \r\nconst defaultHue = 200;\r\nconst defaultBoxStyle = {\r\n\twidth: defaultBoxWidth, \r\n\theight: defaultBoxHeight,\r\n\tduration: 0.5,\r\n\topacity: 1,\r\n\tease: 'SlowMo',\r\n\toverwrite: true,\r\n}\r\n\r\n// softmax\r\nconst computeWidthWeight = (selectIdx, i) => Math.exp(1/Math.abs(selectIdx - i));\r\n\r\nconst parseStyleLength = (length) => parseInt(length.substring(0, length.length-2));\r\n\r\nconst computeHslColor = (hue, saturation, selectIdx, boxCount) => {\r\n\tconst lightness = (selectIdx / boxCount) * 10 + (1 - selectIdx / boxCount) * 75;\r\n\treturn `hsl(${hue}, ${saturation}%, ${lightness}%)`\r\n}\r\n\r\nconst computeWidthArr = (selectIdx, boxCount, defaultWidthStr, selectedWidthStr) => {\r\n\tconst overflowRatio = 1.25;\r\n\tconst widthArr = [];\r\n\t\r\n\tconst defaultWidth = parseStyleLength(defaultWidthStr);\r\n\tconst selectedWidth = parseStyleLength(selectedWidthStr);\r\n\t\r\n\tconst totalWidth = defaultWidth * boxCount;\r\n\t\r\n\tlet totalWeight = 0;\r\n\tfor (let i = 0; i < boxCount; i++) \r\n\t\ttotalWeight += (i !== selectIdx)? computeWidthWeight(selectIdx, i) : 0;\r\n\r\n\tfor (let i = 0; i < boxCount; i++) { \r\n\t\tlet widthInt = (i !== selectIdx)? overflowRatio*(totalWidth-selectedWidth) * (computeWidthWeight(selectIdx, i) / totalWeight) : selectedWidth;\r\n\t\twidthArr.push(`${widthInt}vh`);\r\n\t}\r\n\r\n\treturn widthArr;\r\n}\r\n\r\nconst computeHeightArr = (selectIdx, boxCount, defaultHeightStr, selectedHeightStr) => {\r\n\tconst decayRate = 0.08;\r\n\tconst heightArr = [];\r\n\r\n\tconst defaultHeight = parseStyleLength(defaultHeightStr);\r\n\r\n\tfor (let i = 0; i < boxCount; i++) {\r\n\t\tif (i === selectIdx)\r\n\t\t\theightArr.push(selectedHeightStr);\r\n\t\telse \r\n\t\t\theightArr.push(`${defaultHeight*(1+decayRate*1/Math.abs(selectIdx - i))}vh`);\r\n\t}\r\n\r\n\treturn heightArr;\r\n}\r\n\r\nconst onMouseEnter = (e, index, setHeaderState) => {\r\n\tsetHeaderState(index);\r\n\t\r\n\tconst widthArr = computeWidthArr(index, boxCount, defaultBoxWidth, selectedBoxWidth);\r\n\tconst heightArr = computeHeightArr(index, boxCount, defaultBoxHeight, selectedBoxHeight);\r\n\t\r\n\tfor (let i = 0; i < boxCount; i++) {\r\n\t\tgsap.to(`.box${i}`, {\r\n\t\t\t...defaultBoxStyle, \r\n\t\t\twidth: widthArr[i], \r\n\t\t\theight: heightArr[i],\r\n\t\t\tbackgroundColor: computeHslColor(config[index].hue, 85, i, boxCount),\r\n\t\t});\r\n\t}\r\n\r\n\tgsap.to(`.box${index} .thumbnail`, {\r\n\t\tduration: 1.5, \r\n\t\topacity: 1.0, \r\n\t\toverwrite: true, \r\n\t\tdelay: 0.5\r\n\t});\r\n\r\n\tgsap.to(`.panel.hidden`, {\r\n\t\tduration: 1.5,\r\n\t\topacity: 1,\r\n\t\tboxShadow: `0 10.5px 60.2px -10px rgba(255,255,255, 0.349),\r\n\t\t\t\t\t\t\t\t${-50 + index/boxCount*2*50}px 14.6px 232.2px -10px rgba(255,255,255, 0.497),\t\r\n\t\t\t\t\t\t\t\t${-100 + index/boxCount*2*100}px 28px 382px -10px rgba(255,255,255, 0.84)`,\r\n\t\toverwrite: true,\r\n\t}); \r\n\r\n\tgsap.to('.page-container .intro', {duration:0.25, opacity: 1, ease:'power4'})\r\n\r\n};\r\n\r\nconst onMouseLeave = (e, setHeaderState) => {\r\n\tfor (let i = 0; i < boxCount; i++) {\r\n\t\tgsap.to(`.box${i}`, {\r\n\t\t\t...defaultBoxStyle,\r\n\t\t\tbackgroundColor: computeHslColor(defaultHue, 0, i, boxCount), \r\n\t\t\tboxShadow: '',\r\n\t\t\toverwrite: true\r\n\t\t});\r\n\t\tgsap.to(`.box${i} .thumbnail`, {duration: 0.5, opacity: 0.0, overwrite: true});\r\n\t\t\r\n\t\tgsap.to('.panel.hidden', {\r\n\t\t\tduration: 1.5,\r\n\t\t\topacity: 0,\r\n\t\t\toverwrite: true,\r\n\t\t\tdelay: 0.2,\r\n\t\t}); \r\n\t}\r\n\r\n\tgsap.from('.page-container .intro', {duration:0.5, opacity: 0, ease:'power4'})\r\n\r\n\tsetHeaderState(-1);\r\n};\r\n\r\nconst onClickFeature = (e, index, setPageState) => {\r\n\tsetPageState('features');\r\n};\r\n\r\nconst renderName = () => (\r\n\t<div className='description name-bundle'>\r\n\t\t<h1 className='name'>Zhenda</h1>\r\n\t\t<h1 className='name'>Li</h1>\r\n\t\t<h6> # Full-Stack, DevOps, A.I.</h6>\r\n\t\t<div style={{display:'flex'}}>\r\n\t\t\t<div className=\"icon\" >\r\n\t\t\t\t<a href=\"https://github.com/AndyLizd\" target=\"_blank\">\r\n\t\t\t\t\t<box-icon type='logo' color='white' name='github' animation='flashing-hover'></box-icon>\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"icon\">\r\n\t\t\t\t<a href=\"https://www.linkedin.com/in/zhenda-li/\" target=\"_blank\">\r\n\t\t\t\t\t<box-icon type='logo' color='white' name='linkedin' animation='tada'></box-icon>\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"icon\">\r\n\t\t\t\t<a href=\"mailto: andylizd@outlook.com\" target=\"_blank\">\r\n\t\t\t\t\t<box-icon name='envelope-open' type='solid' color='white' animation='tada'></box-icon>\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n)\r\n\r\nconst renderFeatureSummary = (index) => (\r\n\t<div className='description'>\r\n\t\t<h1 \r\n\t\t\tstyle={{\r\n\t\t\t\tcolor: 'white', \r\n\t\t\t\tfontSize: '6vh', \r\n\t\t\t\tfontFamily: 'Big Shoulders Inline Text', \r\n\t\t\t\ttextAlign: 'center',\r\n\t\t\t\tmargin: 'auto',\r\n\t\t\t\tmarginBottom: '2vh',\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{config[index].head}\r\n\t\t</h1>\r\n\t\t<h6 style={{color: 'white'}}>{`- ${config[index].summary}`}</h6>\r\n\t</div>\r\n)\r\n\r\n\r\nfunction Main() {\r\n\t\r\n\t// headerState: -1, show name modules\r\n\tconst [headerState, setHeaderState] = useState(-1);\r\n\t// jumpToState: -1, show home page\r\n\tconst [pageState, setPageState] = useState('home');\r\n\t// loadingState: 1, loading,\r\n\tconst [loadingState, setLoadingState] = useState(1);\r\n\t\r\n\tuseEffect(() => {\r\n\t\t\r\n\t\tgsap.defaults({overwrite: true});\r\n\r\n\t\tgsap.from('.page-container .intro .name', {duration: 1.5, opacity: 0.0, y: '-5vh', ease:'power4', stagger: 0.5});\r\n\t\tgsap.from('.page-container .intro h6', {duration: 2.0, opacity: 0, x:'3vw', ease:'slow', delay: 1.5});\r\n\t\tgsap.from('.page-container .intro .icon', {duration: 1.0, y:'-3vh', opacity: 0, stagger: 0.2, ease:'bounce', delay:0.5});\r\n\t\t\r\n\r\n\t\tfor (let i = 0; i < boxCount; i++){\r\n\t\t\tgsap.from(`.page-container .panel.top .box${i}`, {\r\n\t\t\t\tduration:2.0, opacity: 0.0, y:`${(2*(i%2)-1)*2.5}vh`, ease:'power4', delay: 3.0,\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsetTimeout(() => setLoadingState(0), 5500);\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t  if (headerState === -1)\r\n\t\tgsap.to('.page-container .intro', {duration: 2.0, opacity: 1})\r\n\t}, [headerState]);\r\n\r\n  return (\r\n\t\t<div>\r\n\t\t\t<div className='page-container'>\r\n\t\t\t\t{/* intro, name & description */}\r\n\t\t\t\t<div className='intro'>\r\n\t\t\t\t\t{headerState === -1? renderName(): renderFeatureSummary(headerState)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"feature\">\r\n\t\t\t\t\t{/* box underneath */}\r\n\t\t\t\t\t{(loadingState === 1) ?\r\n\t\t\t\t\t\t<></>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className='panel hidden' onMouseOut={e => onMouseLeave(e, setHeaderState)}>\r\n\t\t\t\t\t\t\t{config.map((value, index) => \r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tclassName={`box hidden`}\r\n\t\t\t\t\t\t\t\t\tstyle={{...defaultBoxStyle,}}\r\n\t\t\t\t\t\t\t\t\tonMouseOver={e => onMouseEnter(e, index, setHeaderState)}\r\n\t\t\t\t\t\t\t\t\tonClick={e => onClickFeature(e, index, setPageState)}\r\n\t\t\t\t\t\t\t\t\tkey={index.toString()+' box hident'}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\t{/* box on top */}\r\n\t\t\t\t\t<div className='panel top'>\r\n\t\t\t\t\t{config.map((value, index) => \r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t...defaultBoxStyle, \r\n\t\t\t\t\t\t\t\t\tbackgroundColor: computeHslColor(defaultHue, 0, index, boxCount),\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tclassName={`box box${index}`}\r\n\t\t\t\t\t\t\t\tkey={index.toString()+' box'}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{/* <div className='thumbnail' \r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tbackgroundImage: `url(${config[index].thumbnail})`,\r\n\t\t\t\t\t\t\t\t\t\t// filter: 'grayscale(100%)'\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/> */}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t(config[index].thumbanilType === 'video' ?\r\n\t\t\t\t\t\t\t\t\t\t<div className='thumbnail'>\r\n\t\t\t\t\t\t\t\t\t\t\t<video \r\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={`${config[index].thumbnail}`} autoPlay muted loop \r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{height:'inherit'}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t<div className='thumbnail' \r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundImage: `url(${config[index].thumbnail})`,\r\n\t\t\t\t\t\t\t\t\t\t\t\t// filter: 'grayscale(100%)'\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/> \r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\r\n\t\t\t{/* < Features props={{}}/> */}\r\n\t\t\t\r\n\t\t</div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","G:\\projects\\personal web\\portfolio-react\\src\\boxConfig.js",[],"G:\\projects\\personal web\\portfolio-react\\src\\features\\glider.jsx",["73","74"],"import React, { useState } from \"react\";\r\nimport config from \"../boxConfig\";\r\nimport Template from \"./template\";\r\n\r\nimport \"./styles/template.css\";\r\nimport \"./styles/glider.css\";\r\n\r\n// config here\r\nconst featureName = \"glider\";\r\n\r\nconst index = config.findIndex((elem) => elem.name === featureName);\r\nconst headerFontFamily = config[index].headerFont;\r\n\r\nfunction Glider() {\r\n  return (\r\n    <div className=\"glider\">\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          bottom: 0,\r\n          right: 0,\r\n          height: \"45vh\",\r\n          width: \"48vw\",\r\n          // border: \"0.1em solid white\",\r\n        }}\r\n      >\r\n        <Template props={{ index, headerFontFamily }}></Template>\r\n      </div>\r\n      <img\r\n        src=\"img/glider/glider.jpg\"\r\n        alt=\"glider image\"\r\n        style={{\r\n          position: \"absolute\",\r\n          left: \"5vw\",\r\n          top: \"5vh\",\r\n          borderRadius: \"0.0em\",\r\n          height: \"85vh\",\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Glider;\r\n",["75","76"],"G:\\projects\\personal web\\portfolio-react\\src\\features\\sfdispatch.jsx",["77","78"],"import React, { useState } from \"react\";\r\n\r\nimport config from '../boxConfig';\r\n\r\nimport \"./styles/template.css\";\r\nimport './styles/sfdispatch.css';\r\n\r\nconst index = config.findIndex(elem => elem.name === 'sfdispatch');\r\n\r\nfunction SFdispatch() {\r\n  return (\r\n    <div>\r\n\t\t\t<h1>\r\n\t\t\t\thello world.\r\n\t\t\t</h1>\r\n    </div>        \r\n  );\r\n}\r\n\r\nexport default SFdispatch;","G:\\projects\\personal web\\portfolio-react\\src\\features\\recommender.jsx",["79","80"],"import React, { useState } from \"react\";\r\nimport config from '../boxConfig';\r\n\r\nimport \"./styles/template.css\";\r\nimport './styles/recommender.css';\r\n\r\nconst index = config.findIndex(elem => elem.name === 'recommender');\r\n\r\nfunction Recommender() {\r\n  return (\r\n    <div>\r\n\t\t\t<h1>\r\n\t\t\t\thello world.\r\n\t\t\t</h1>\r\n    </div>        \r\n  );\r\n}\r\n\r\nexport default Recommender;\r\n","G:\\projects\\personal web\\portfolio-react\\src\\features\\ganart.jsx",["81","82"],"import React, { useState } from \"react\";\r\nimport config from '../boxConfig';\r\n\r\nimport \"./styles/template.css\";\r\nimport './styles/ganart.css';\r\n\r\nconst index = config.findIndex(elem => elem.name === 'ganart');\r\n\r\nfunction GanArt() {\r\n  return (\r\n    <div>\r\n\t\t\t<h1>\r\n\t\t\t\thello world.\r\n\t\t\t</h1>\r\n    </div>        \r\n  );\r\n}\r\n\r\nexport default GanArt;\r\n","G:\\projects\\personal web\\portfolio-react\\src\\features\\starlink.jsx",["83","84"],"import React, { useState } from \"react\";\r\n\r\nimport config from '../boxConfig';\r\n\r\nimport \"./styles/template.css\";\r\nimport './styles/starlink.css';\r\n\r\nconst index = config.findIndex(elem => elem.name === 'starlink');\r\n\r\nfunction Starlink() {\r\n  return (\r\n    <div>\r\n\t\t\t<h1>\r\n\t\t\t\thello world.\r\n\t\t\t</h1>\r\n    </div>        \r\n  );\r\n}\r\n\r\nexport default Starlink;\r\n","G:\\projects\\personal web\\portfolio-react\\src\\features\\template.jsx",["85"],"import React, { useState } from \"react\";\r\nimport config from '../boxConfig';\r\n\r\nimport \"./styles/template.css\";\r\nimport './styles/template.css';\r\n\r\n\r\nfunction Template({props}) {\r\n\r\n  const fontFamily = 'Open Sans Condensed'; //props.headerFontFamily;\r\n\r\n  return (\r\n    <div className='text'>\r\n      <h1 className='header' style={{fontFamily: fontFamily, fontSize: '8vh'}}>\r\n        {config[props.index].head}\r\n      </h1>\r\n      <ul className='detail-list'>\r\n        {config[props.index].details.map((line, dummy) => (\r\n          <li className='detail' key={`${config[props.index].name} details ${dummy}`}> {'+ ' + line} </li>\r\n        ))}\r\n      </ul>\r\n    </div>       \r\n  );\r\n}\r\n\r\nexport default Template;\r\n","G:\\projects\\personal web\\portfolio-react\\src\\features\\features.jsx",["86","87","88","89","90","91","92","93"],"import { React, useEffect, useRef } from \"react\";\r\nimport gsap from \"gsap\";\r\nimport ScrollTrigger from 'gsap/ScrollTrigger'\r\nimport Scrollbar from 'smooth-scrollbar';\r\n\r\nimport Template from './template';\r\nimport config from '../boxConfig';\r\nimport \"./styles/features.css\";\r\n\r\n\r\nconst index = {};\r\n\r\nfor (let i = 0; i < config.length; i++) {\r\n\tindex[config[i].name] = i;\r\n}\r\n\r\nconst onClick = (sectionRef) => {\r\n\tsectionRef.current.scrollIntoView({ behavior: 'smooth' })\r\n}\r\n\r\nconst smoothScrollSetup = (mainRef) => {\r\n\tconst container = mainRef.current;\r\n\r\n\t// specifiy to use the mainRef element's scrollbar, \r\n\tconst bodyScrollbar = Scrollbar.init(container, {damping: 0.05, delegateTo: container});\r\n\t// bodyScrollbar.track.yAxis.element.remove();\r\n\r\n\tScrollTrigger.scrollerProxy(container, {\r\n\t\tscrollTop(value) {\r\n\t\t\tif (arguments.length) {\r\n\t\t\t\tbodyScrollbar.scrollTop = value;\r\n\t\t\t}\r\n\t\t\treturn bodyScrollbar.scrollTop;\r\n\t\t},\r\n\t\tgetBoundingClientRect() {\r\n\t\t\treturn {top: 0, left: 0, width: window.innerWidth, height: window.innerHeight};\r\n\t\t}\r\n\t});\r\n\r\n\t// optimize the performance of scroll, without it, the pin functionality is terrible\r\n\tbodyScrollbar.addListener(ScrollTrigger.update);\r\n\r\n\t// since we are using the scrollbar of scrollable, we need to\r\n\t// add {scroller: '.scrollable'} to every ScrollTrigger,\r\n\t// an easy way to do it is ...\r\n\tScrollTrigger.defaults({scroller: '.scrollable'});  \r\n}\r\n\r\n\r\nconst staticImgScroll = (sectionName, toHeightVh) => {\r\n\tconst prefix = `.features-page .${sectionName}`;\r\n\tconst imgSelector = `${prefix} .img-div img`;\r\n\tconst divSelector = `${prefix} .img-div`;\r\n\tconst headerSelector = `${prefix} .header`;\r\n\t\r\n\tconst scrollTrigger = {\r\n\t\ttrigger: divSelector,\r\n\t\tstart: 'top 100%',\r\n\t\tend: 'bottom 85%',\r\n\t\tmarkers: false,\r\n\t\tscrub: false,\r\n\t};\r\n\r\n\tgsap.from(imgSelector, {scrollTrigger: scrollTrigger, duration: 3.5, scale: 1.3, ease:'power'});\r\n\tgsap.from(divSelector, {scrollTrigger: scrollTrigger, duration: 2.0, height:`${toHeightVh*0.35}vh`, ease:'power2'});\r\n\tgsap.from(headerSelector, {scrollTrigger: scrollTrigger, duration: 3, opacity:0});\r\n}\r\n\r\nconst dynamicWordsScroll = (sectionName, fromBottomMarginVh) => {\r\n\tconst wordsSelector = `.features-page .${sectionName} .words`;\r\n\r\n\tconst scrollTrigger = {\r\n\t\ttrigger: wordsSelector,\r\n\t\tstart: '-100% 85%',\r\n\t\tend: 'center 30%',\r\n\t\tmarkers: false,\r\n\t\tscrub: 0.5,\r\n\t\t\r\n\t};\r\n\r\n\tgsap.from(wordsSelector, {scrollTrigger: scrollTrigger, marginBottom: `${fromBottomMarginVh}vh`, opacity: '0.8'});\r\n}\r\n\r\nexport const sfdispatchAnimate = () => {\r\n\tconst selectorPrefix = '.features-page .sfdispatch';\r\n\tconst wordsSelector = `${selectorPrefix} .words`;\r\n\tconst videoSelector = `${selectorPrefix} .video-div`;\r\n\r\n\tgsap.from(wordsSelector, {scrollTrigger: {trigger: wordsSelector, scrub: 1.5, markers:false}, marginBottom: '45vh'} );\r\n\tgsap.from(videoSelector, {\r\n\t\t\tmarginBottom: '-15vh',\r\n\t\t\tscrollTrigger: {\r\n\t\t\t\ttrigger: videoSelector, \r\n\t\t\t\tstart:'-300px bottom',\r\n\t\t\t\tend: 'center top',\r\n\t\t\t\tscrub: 0.5, \r\n\t\t\t\tmarkers:false,\r\n\t\t\t}, \r\n\t\t},\r\n\t);\r\n}\r\n\r\nexport const skillsAnimate = () => {\r\n\tstaticImgScroll('skills', 75);\r\n\tdynamicWordsScroll('skills', -20);\r\n}\r\n\r\nexport const recommenderAnimate = () => {\r\n\tstaticImgScroll('recommender', 70);\r\n\tdynamicWordsScroll('recommender', -20);\r\n}\r\n\r\nexport const starlinkAnimate = () => {\r\n\tconst selectorPrefix = '.features-page .starlink';\r\n\tconst imgSelector = `${selectorPrefix} .img-div img`;\r\n\tconst wordsSelector = `${selectorPrefix} .words`;\r\n\t\r\n\tgsap.from(wordsSelector, {\r\n\t\tscrollTrigger: {\r\n\t\t\ttrigger: wordsSelector,\r\n\t\t\tstart: '-200% top',\r\n\t\t\tend: '-30% top',\r\n\t\t\tmarkers: false,\r\n\t\t\tscrub: false,\r\n\t\t\t\r\n\t\t},\r\n\t\topacity: 0,\r\n\t\tduration: 2,\r\n\t})\r\n\r\n\tgsap.from(imgSelector, {\r\n\t\tscrollTrigger:{\r\n\t\t\ttrigger: wordsSelector,\r\n\t\t\tstart: '40% 50%',\r\n\t\t\tend: '350% center',\r\n\t\t\tpin: selectorPrefix,\r\n\t\t\tscrub: true,\r\n\t\t\tmarkers: false,\r\n\t\t},\r\n\t\twidth: 0,\r\n\t})\r\n}\r\n\r\nexport const gliderAnimate = () => {\r\n\tconst selectorPrefix = '.features-page .glider';\r\n\tconst wordsSelector = `${selectorPrefix} .words`;\r\n\tconst secondaryDivSelector = `${selectorPrefix} .secondary-img-div`;\r\n\tconst secondaryImgSelector = `${selectorPrefix} .secondary-img-div img`;\r\n\t\r\n\t// major image selector\r\n\tstaticImgScroll('glider', 100);\r\n\t\r\n\tconst secdonaryImgScrollTrigger = {\r\n\t\ttrigger: secondaryImgSelector,\r\n\t\tstart: 'top 100%',\r\n\t\tend: 'bottom 85%',\r\n\t\tmarkers: false,\r\n\t\tscrub: false,\r\n\t};\r\n\t\r\n\tgsap.from(secondaryImgSelector, {scrollTrigger: secdonaryImgScrollTrigger, duration: 3.5, scale: 1.3, ease:'power'});\r\n\tgsap.from(secondaryDivSelector, {scrollTrigger: secdonaryImgScrollTrigger, duration: 2.0, height:`${10*0.35}vh`, ease:'power2'});\r\n\t\r\n\tconst scrollTrigger = {\r\n\t\ttrigger: wordsSelector,\r\n\t\tstart: 'top 85%',\r\n\t\tend: 'center top',\r\n\t\tmarkers: false,\r\n\t\tscrub: 0.5,\r\n\t};\r\n\t\r\n\tgsap.from(wordsSelector, {scrollTrigger: scrollTrigger, y:'30%', opacity: '0.8'});\r\n}\r\n\r\nexport const ganartAnimate = () => {\r\n\tconst selectorPrefix = '.features-page .ganart';\r\n\tconst wordsSelector = `${selectorPrefix} .words`;\r\n\tconst imgSelector = `${selectorPrefix} .img-div img`;\r\n\r\n\tconst scrollTrigger = {\r\n\t\ttrigger: wordsSelector,\r\n\t\tstart: 'center center',\r\n\t\tend: '580% center',\r\n\t\tscrub: true,\r\n\t\tpin: wordsSelector,\r\n\t\tmarkers: false,\r\n\t}\r\n\tgsap.from(imgSelector, {scrollTrigger: scrollTrigger, opacity: 0.2})\r\n\r\n}\r\n\r\nexport const educationAnimate = () => {\r\n\tconst selectorPrefix = '.features-page .education';\r\n\tconst backgroundSelector = `${selectorPrefix} video`;\r\n\tconst wordsSelector =  `${selectorPrefix} .words`;\r\n\t\r\n\tconst tl = gsap.timeline({scrollTrigger: selectorPrefix});\r\n\ttl.from(backgroundSelector, {duration: 2.5, top:'100vh', ease: 'power4'})\r\n\t\t.from(backgroundSelector, {duration: 1.0, opacity: 1})\r\n\t// \t.from(wordsSelector, {duration: 2, opacity: 0});\r\n}\r\n\r\nexport function Features({props}) {\r\n\r\n\tconst refAggregate = {};\r\n\trefAggregate['education'] = useRef(null);\r\n\trefAggregate['skills'] = useRef(null);\r\n\trefAggregate['glider'] = useRef(null);\r\n\trefAggregate['ganart'] = useRef(null);\r\n\trefAggregate['recommender'] = useRef(null);\r\n\trefAggregate['starlink'] = useRef(null);\r\n\trefAggregate['sfdispatch'] = useRef(null);\r\n\trefAggregate['others'] = useRef(null);\r\n\r\n\t\r\n\tuseEffect(() => {\r\n\t\t// window.document.location.hash = '';\r\n\t\t// window.document.location.hash = '#ganid';\r\n\t\t// window.scrollTo(0, refAggregate['ganart'].current.getBoundingClientRect().y)\r\n\t\t\r\n\t\t// gsap.registerPlugin(ScrollTrigger);\r\n\t\t// smoothScrollSetup(mainRef);\r\n\t\t// ScrollTrigger.defaults({scroller: '.scrollable'});\r\n\r\n\t\t// // animation\r\n\t\t// educationAnimate();\r\n\t\t// skillsAnimate();\r\n\t\t// sfdispatchAnimate();\r\n\t\t// recommenderAnimate();\r\n\t\t// starlinkAnimate();\t\t\r\n\t\t// gliderAnimate();\r\n\t\t// ganartAnimate();\r\n\t\t\r\n\t\t// must put at the end, because the gsap pin above will rewrite ref's y coordinate value\r\n\t\t// refAggregate[props.startSection].current.scrollIntoView({});\t\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className='features-page'>\r\n\t\t\t\t{/* <div style={{marginTop: '2.5vh', marginRight: '0.8vw', position:'fixed', right: 0, zIndex: 100}}>\r\n\t\t\t\t\t<a href=\"/\" className=\"button\" >Home</a>\r\n\t\t\t\t</div> */}\r\n\r\n\r\n\t\t\t\t<span ref={refAggregate['others']}></span>\r\n\t\t\t\t{/* education */}\r\n\t\t\t\t<section className='education' ref={refAggregate['education']}>\r\n\t\t\t\t\t<div className='words' style={{\r\n\t\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\t\tborder: '0.1rem solid white', \r\n\t\t\t\t\t\tleft: '5vw', \r\n\t\t\t\t\t\ttop: '50vh', \r\n\t\t\t\t\t\ttransform: 'translateY(-50%)',\r\n\t\t\t\t\t\tpaddingRight: '25px',\r\n\t\t\t\t\t\tzIndex: 15,\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<Template props={{ index: index.education}} />\r\n\t\t\t\t\t\t<Template props={{ index: index.others}} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<video \r\n\t\t\t\t\t\tsrc='/Videos/ink_1.mp4' autoPlay muted loop \r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tposition:'absolute',\r\n\t\t\t\t\t\t\ttop: 0,\r\n\t\t\t\t\t\t\tleft: 0, \r\n\t\t\t\t\t\t\theight: '100%',\r\n\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\topacity: 0.35,\r\n\t\t\t\t\t\t\tobjectFit: 'cover',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</section>\r\n\r\n\r\n\t\t\t\t{/* skills */}\r\n\t\t\t\t<section className='skills' ref={refAggregate['skills']}>\r\n\t\t\t\t\t<div \r\n\t\t\t\t\t\tclassName='img-div'\r\n\t\t\t\t\t\tstyle={{height:'75vh', width:'50vw', marginBottom:'15vh'}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<img src=\"/img/skills/skills.jpg\" style={{width:'inherit',}} alt=\"\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='words' style={{marginBottom:'10vh'}}>\r\n\t\t\t\t\t\t<Template props={{ index: index.skills}} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</section>\r\n\r\n\r\n\t\t\t\t{/* projects */}\r\n\t\t\t\t{/* SF Dispatch */}\r\n\t\t\t\t<section className='sfdispatch' ref={refAggregate['sfdispatch']}>\r\n\t\t\t\t\t<div className='words' style={{marginBottom:'50vh', maxWidth:'36vw'}}>\r\n\t\t\t\t\t\t<Template props={{ index: index.sfdispatch}} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='video-div' style={{marginBottom:'25vh', width:'50vw',}}>\r\n\t\t\t\t\t\t<video \r\n\t\t\t\t\t\t\tsrc='/Videos/sfdispatch.mp4' autoPlay muted loop \r\n\t\t\t\t\t\t\tstyle={{width:'inherit'}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</section>\r\n\r\n\r\n\t\t\t\t{/* Recommender */}\r\n\t\t\t\t<section className='recommender' ref={refAggregate['recommender']}>\r\n\t\t\t\t\t<div \r\n\t\t\t\t\t\tclassName='img-div'\r\n\t\t\t\t\t\tstyle={{height:'70vh', width:'50vw', marginBottom:'28vh' }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<img src=\"/img/recommender/recommender.jpg\" style={{width:'inherit'}} alt=\"\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='words' style={{marginBottom:'10vh'}}>\r\n\t\t\t\t\t\t<Template props={{ index: index.recommender}} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</section>\r\n\r\n\t\t\t\t{/* star link */}\r\n\t\t\t\t<section className='starlink' ref={refAggregate['starlink']} style={{alignItems:'flex-start', height:'150vh'}}>\r\n\t\t\t\t\t<div \r\n\t\t\t\t\t\tclassName='img-div'\r\n\t\t\t\t\t\tstyle={{width:'50vw'}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<img \r\n\t\t\t\t\t\t\tsrc=\"/img/starlink/moon.png\" \r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\twidth:'50vw', \r\n\t\t\t\t\t\t\t\tposition:'absolute', \r\n\t\t\t\t\t\t\t\ttop:'50vh', \r\n\t\t\t\t\t\t\t\tleft: '25vw',\r\n\t\t\t\t\t\t\t\ttransform:'translateY(-50%) translateX(-50%)',\r\n\t\t\t\t\t\t\t\t// border: '1px solid white'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='words' style={{marginTop: '37vh'}}>\r\n\t\t\t\t\t\t<Template props={{ index: index.starlink}}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</section>\r\n\r\n\t\t\t\t{/* A.I. Soaring */}\r\n\t\t\t\t<section className='glider' id='gliderId' ref={refAggregate['glider']}>\r\n\t\t\t\t\t<div \r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tmarginTop: '0vh',\r\n\t\t\t\t\t\t\tdisplay:'flex', \r\n\t\t\t\t\t\t\tflexDirection:'column', \r\n\t\t\t\t\t\t\tjustifyContent:'space-between', \r\n\t\t\t\t\t\t\talignItems:'center',\r\n\t\t\t\t\t\t\theight: '100vh',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div className=\"words\">\r\n\t\t\t\t\t\t\t<Template props={{ index: index.glider}} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"secondary-img-div\" style={{height:'52vh', width:'35vw', marginBottom:'3vh', overflow:'hidden'}}>\r\n\t\t\t\t\t\t\t<img src=\"/img/glider/glider_2.png\" style={{width:'inherit'}}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='img-div' style={{height:'100vh', width:'35vw', marginBottom: 0}}>\r\n\t\t\t\t\t\t<img src=\"/img/glider/glider.jpg\" style={{width:'inherit', }} alt=\"\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</section>\r\n\r\n\r\n\t\t\t\t{/* Art by GANs */}\r\n\t\t\t\t<section className='ganart' ref={refAggregate['ganart']} style={{height: '250vh', alignItems: 'flex-start'}}>\r\n\t\t\t\t\t<div className='img-div' style={{marginTop: '50vh', height:'200vh', width:'42vw'}}>\r\n\t\t\t\t\t\t<img src=\"/img/ganart/ganart.jpg\" style={{height:'inherit'}} alt=\"\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='words' style={{marginTop:'20vh', maxWidth:'40VW'}}>\r\n\t\t\t\t\t\t<Template props={{ index: index.ganart}} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</section>\r\n\r\n\t\t\t\t{/* footer copyright */}\r\n\t\t\t\t<div \r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: '15vh',position:'absolute', height:'50vh', width:'100vw', \r\n\t\t\t\t\t\tbackgroundColor:'#0ABAB5', color:'white', textAlign:'center',\r\n\t\t\t\t\t\tborderBottom: '12px solid #0ABAB5',\r\n\t\t\t\t\t}}>\t\r\n\t\t\t\t\t\t<div style={{display: 'flex', flexDirection:'column', justifyContent:'space-around', alignItems:'center'}}>\t\t\t\r\n\t\t\t\t\t\t\t<h1 className='name' style={{fontFamily:'Shadows Into Light', fontSize:'12vh', margin:'3vh'}}>Zhenda Li</h1>\r\n\t\t\t\t\t\t\t<h2 style={{fontWeight: '200', fontSize: '3vh', marginBottom: '2vh'}}>contact me: andylizd@outlook.com </h2>\r\n\t\t\t\t\t\t\t<div style={{display:'flex', justifyContent:'space-around', width: '15vw', margin:'1.5vh'}}>\r\n\t\t\t\t\t\t\t\t<div className=\"icon\" >\r\n\t\t\t\t\t\t\t\t\t<a href=\"https://github.com/AndyLizd\" target=\"_blank\">\r\n\t\t\t\t\t\t\t\t\t\t<box-icon type='logo' color='white' name='github' animation='flashing-hover'></box-icon>\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"icon\">\r\n\t\t\t\t\t\t\t\t\t<a href=\"https://www.linkedin.com/in/zhenda-li/\" target=\"_blank\">\r\n\t\t\t\t\t\t\t\t\t\t<box-icon type='logo' color='white' name='linkedin' animation='flashing-hover'></box-icon>\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"icon\">\r\n\t\t\t\t\t\t\t\t\t<a href=\"mailto: andylizd@outlook.com\" target=\"_blank\">\r\n\t\t\t\t\t\t\t\t\t\t<box-icon name='envelope-open' type='solid' color='white' animation='flashing-hover'></box-icon>\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t<h1 style={{fontWeight: '200', fontSize: '2.5vh', margin:'5vh'}}>\r\n\t\t\t\t\t\t&copy; Copyright 2021 - Zhenda Li\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\n// export default Features;",{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":96,"column":15,"nodeType":"100","endLine":96,"endColumn":78},{"ruleId":"98","severity":1,"message":"99","line":106,"column":15,"nodeType":"100","endLine":106,"endColumn":99},{"ruleId":"101","severity":1,"message":"102","line":3,"column":8,"nodeType":"103","messageId":"104","endLine":3,"endColumn":21},{"ruleId":"101","severity":1,"message":"105","line":4,"column":8,"nodeType":"103","messageId":"104","endLine":4,"endColumn":17},{"ruleId":"101","severity":1,"message":"106","line":10,"column":8,"nodeType":"103","messageId":"104","endLine":10,"endColumn":16},{"ruleId":"107","severity":1,"message":"108","line":144,"column":5,"nodeType":"100","endLine":144,"endColumn":59},{"ruleId":"107","severity":1,"message":"108","line":149,"column":5,"nodeType":"100","endLine":149,"endColumn":70},{"ruleId":"107","severity":1,"message":"108","line":154,"column":5,"nodeType":"100","endLine":154,"endColumn":60},{"ruleId":"101","severity":1,"message":"109","line":186,"column":9,"nodeType":"103","messageId":"104","endLine":186,"endColumn":18},{"ruleId":"101","severity":1,"message":"110","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":25},{"ruleId":"111","severity":1,"message":"112","line":29,"column":7,"nodeType":"100","endLine":39,"endColumn":9},{"ruleId":"94","replacedBy":"113"},{"ruleId":"96","replacedBy":"114"},{"ruleId":"101","severity":1,"message":"110","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":25},{"ruleId":"101","severity":1,"message":"115","line":8,"column":7,"nodeType":"103","messageId":"104","endLine":8,"endColumn":12},{"ruleId":"101","severity":1,"message":"110","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":25},{"ruleId":"101","severity":1,"message":"115","line":7,"column":7,"nodeType":"103","messageId":"104","endLine":7,"endColumn":12},{"ruleId":"101","severity":1,"message":"110","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":25},{"ruleId":"101","severity":1,"message":"115","line":7,"column":7,"nodeType":"103","messageId":"104","endLine":7,"endColumn":12},{"ruleId":"101","severity":1,"message":"110","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":25},{"ruleId":"101","severity":1,"message":"115","line":8,"column":7,"nodeType":"103","messageId":"104","endLine":8,"endColumn":12},{"ruleId":"101","severity":1,"message":"110","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":25},{"ruleId":"101","severity":1,"message":"116","line":17,"column":7,"nodeType":"103","messageId":"104","endLine":17,"endColumn":14},{"ruleId":"101","severity":1,"message":"117","line":21,"column":7,"nodeType":"103","messageId":"104","endLine":21,"endColumn":24},{"ruleId":"101","severity":1,"message":"118","line":195,"column":8,"nodeType":"103","messageId":"104","endLine":195,"endColumn":21},{"ruleId":"98","severity":1,"message":"99","line":324,"column":7,"nodeType":"100","endLine":334,"endColumn":9},{"ruleId":"98","severity":1,"message":"99","line":357,"column":8,"nodeType":"100","endLine":357,"endColumn":71},{"ruleId":"107","severity":1,"message":"108","line":388,"column":10,"nodeType":"100","endLine":388,"endColumn":64},{"ruleId":"107","severity":1,"message":"108","line":393,"column":10,"nodeType":"100","endLine":393,"endColumn":75},{"ruleId":"107","severity":1,"message":"108","line":398,"column":10,"nodeType":"100","endLine":398,"endColumn":65},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'ScrollTrigger' is defined but never used.","Identifier","unusedVar","'Scrollbar' is defined but never used.","'Features' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'pageState' is assigned a value but never used.","'useState' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",["119"],["120"],"'index' is assigned a value but never used.","'onClick' is assigned a value but never used.","'smoothScrollSetup' is assigned a value but never used.","'wordsSelector' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]