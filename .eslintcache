[{"G:\\projects\\personal web\\portfolio-react\\src\\index.js":"1","G:\\projects\\personal web\\portfolio-react\\src\\reportWebVitals.js":"2","G:\\projects\\personal web\\portfolio-react\\src\\App.js":"3","G:\\projects\\personal web\\portfolio-react\\src\\main.jsx":"4","G:\\projects\\personal web\\portfolio-react\\src\\boxConfig.js":"5","G:\\projects\\personal web\\portfolio-react\\src\\features\\glider.jsx":"6","G:\\projects\\personal web\\portfolio-react\\src\\features\\sfdispatch.jsx":"7","G:\\projects\\personal web\\portfolio-react\\src\\features\\recommender.jsx":"8","G:\\projects\\personal web\\portfolio-react\\src\\features\\ganart.jsx":"9","G:\\projects\\personal web\\portfolio-react\\src\\features\\starlink.jsx":"10","G:\\projects\\personal web\\portfolio-react\\src\\features\\template.jsx":"11","G:\\projects\\personal web\\portfolio-react\\src\\features\\features.jsx":"12"},{"size":501,"mtime":1609986944436,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":138,"mtime":1609897008808,"results":"16","hashOfConfig":"14"},{"size":8084,"mtime":1609986516526,"results":"17","hashOfConfig":"14"},{"size":5088,"mtime":1609874458045,"results":"18","hashOfConfig":"14"},{"size":1027,"mtime":1609724183198,"results":"19","hashOfConfig":"14"},{"size":365,"mtime":1609704378267,"results":"20","hashOfConfig":"14"},{"size":369,"mtime":1609704356495,"results":"21","hashOfConfig":"14"},{"size":349,"mtime":1609704338287,"results":"22","hashOfConfig":"14"},{"size":359,"mtime":1609704442755,"results":"23","hashOfConfig":"14"},{"size":712,"mtime":1609864830266,"results":"24","hashOfConfig":"14"},{"size":6453,"mtime":1609990247610,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1anx02i",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"28"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"G:\\projects\\personal web\\portfolio-react\\src\\index.js",[],["60","61"],"G:\\projects\\personal web\\portfolio-react\\src\\reportWebVitals.js",[],"G:\\projects\\personal web\\portfolio-react\\src\\App.js",["62"],"import Main from './main';\nimport React, {useEffect} from 'react'\n\n\nfunction App() {\n  return (\n    < Main />\n  );\n}\n\nexport default App;\n","G:\\projects\\personal web\\portfolio-react\\src\\main.jsx",["63","64","65"],"import React, { useState, useEffect } from \"react\";\r\nimport gsap from \"gsap\";\r\nimport 'boxicons';\r\n\r\nimport \"./main.css\";\r\nimport config from \"./boxConfig\";\r\n\r\nimport Features from './features/features';\r\n\r\n// config\r\nconst boxCount = config.length;\r\nconst defaultBoxWidth = '9vh';\r\nconst defaultBoxHeight = '34vh';\r\nconst selectedBoxWidth = '40vh'; \r\nconst selectedBoxHeight = selectedBoxWidth; \r\nconst defaultHue = 200;\r\nconst defaultBoxStyle = {\r\n\twidth: defaultBoxWidth, \r\n\theight: defaultBoxHeight,\r\n\tduration: 0.5,\r\n\topacity: 1,\r\n\tease: 'SlowMo',\r\n\toverwrite: true,\r\n}\r\n\r\n// softmax\r\nconst computeWidthWeight = (selectIdx, i) => Math.exp(1/Math.abs(selectIdx - i));\r\n\r\nconst parseStyleLength = (length) => parseInt(length.substring(0, length.length-2));\r\n\r\nconst computeHslColor = (hue, saturation, selectIdx, boxCount) => {\r\n\tconst lightness = (selectIdx / boxCount) * 10 + (1 - selectIdx / boxCount) * 75;\r\n\treturn `hsl(${hue}, ${saturation}%, ${lightness}%)`\r\n}\r\n\r\nconst computeWidthArr = (selectIdx, boxCount, defaultWidthStr, selectedWidthStr) => {\r\n\tconst overflowRatio = 1.25;\r\n\tconst widthArr = [];\r\n\t\r\n\tconst defaultWidth = parseStyleLength(defaultWidthStr);\r\n\tconst selectedWidth = parseStyleLength(selectedWidthStr);\r\n\t\r\n\tconst totalWidth = defaultWidth * boxCount;\r\n\t\r\n\tlet totalWeight = 0;\r\n\tfor (let i = 0; i < boxCount; i++) \r\n\t\ttotalWeight += (i !== selectIdx)? computeWidthWeight(selectIdx, i) : 0;\r\n\r\n\tfor (let i = 0; i < boxCount; i++) { \r\n\t\tlet widthInt = (i !== selectIdx)? overflowRatio*(totalWidth-selectedWidth) * (computeWidthWeight(selectIdx, i) / totalWeight) : selectedWidth;\r\n\t\twidthArr.push(`${widthInt}vh`);\r\n\t}\r\n\r\n\treturn widthArr;\r\n}\r\n\r\nconst computeHeightArr = (selectIdx, boxCount, defaultHeightStr, selectedHeightStr) => {\r\n\tconst decayRate = 0.08;\r\n\tconst heightArr = [];\r\n\r\n\tconst defaultHeight = parseStyleLength(defaultHeightStr);\r\n\r\n\tfor (let i = 0; i < boxCount; i++) {\r\n\t\tif (i === selectIdx)\r\n\t\t\theightArr.push(selectedHeightStr);\r\n\t\telse \r\n\t\t\theightArr.push(`${defaultHeight*(1+decayRate*1/Math.abs(selectIdx - i))}vh`);\r\n\t}\r\n\r\n\treturn heightArr;\r\n}\r\n\r\nconst onMouseEnter = (e, index, setHeaderState) => {\r\n\tsetHeaderState(index);\r\n\t\r\n\tconst widthArr = computeWidthArr(index, boxCount, defaultBoxWidth, selectedBoxWidth);\r\n\tconst heightArr = computeHeightArr(index, boxCount, defaultBoxHeight, selectedBoxHeight);\r\n\t\r\n\tfor (let i = 0; i < boxCount; i++) {\r\n\t\tgsap.to(`.box${i}`, {\r\n\t\t\t...defaultBoxStyle, \r\n\t\t\twidth: widthArr[i], \r\n\t\t\theight: heightArr[i],\r\n\t\t\tbackgroundColor: computeHslColor(config[index].hue, 85, i, boxCount),\r\n\t\t});\r\n\t}\r\n\r\n\tgsap.to(`.box${index} .thumbnail`, {\r\n\t\tduration: 1.5, \r\n\t\topacity: 1.0, \r\n\t\toverwrite: true, \r\n\t\tdelay: 0.5\r\n\t});\r\n\r\n\tgsap.to(`.panel.hidden`, {\r\n\t\tduration: 1.5,\r\n\t\topacity: 1,\r\n\t\tboxShadow: `0 10.5px 60.2px -10px rgba(255,255,255, 0.349),\r\n\t\t\t\t\t\t\t\t${-50 + index/boxCount*2*50}px 14.6px 232.2px -10px rgba(255,255,255, 0.497),\t\r\n\t\t\t\t\t\t\t\t${-100 + index/boxCount*2*100}px 28px 382px -10px rgba(255,255,255, 0.84)`,\r\n\t\toverwrite: true,\r\n\t}); \r\n\r\n\tgsap.to('.page-container .intro', {duration:0.25, opacity: 1, ease:'power4'})\r\n\r\n};\r\n\r\nconst onMouseLeave = (e, setHeaderState) => {\r\n\tfor (let i = 0; i < boxCount; i++) {\r\n\t\tgsap.to(`.box${i}`, {\r\n\t\t\t...defaultBoxStyle,\r\n\t\t\tbackgroundColor: computeHslColor(defaultHue, 0, i, boxCount), \r\n\t\t\tboxShadow: '',\r\n\t\t\toverwrite: true\r\n\t\t});\r\n\t\tgsap.to(`.box${i} .thumbnail`, {duration: 0.25, opacity: 0.0, overwrite: true});\r\n\t\t\r\n\t\tgsap.to('.panel.hidden', {\r\n\t\t\tduration: 1.5,\r\n\t\t\topacity: 0,\r\n\t\t\toverwrite: true,\r\n\t\t}); \r\n\t}\r\n\r\n\tgsap.from('.page-container .intro', {duration:0.5, opacity: 0, ease:'power4'})\r\n\r\n\tsetHeaderState(-1);\r\n};\r\n\r\nconst onClickFeature = (e, index, setPageState) => {\r\n\tsetPageState('features');\r\n};\r\n\r\nconst renderName = () => (\r\n\t<div className='description name-bundle'>\r\n\t\t<h1 className='name'>Zhenda</h1>\r\n\t\t<h1 className='name'>Li</h1>\r\n\t\t<h6> # Full-Stack, DevOps, A.I.</h6>\r\n\t\t<div style={{display:'flex'}}>\r\n\t\t\t<div className=\"icon\">\r\n\t\t\t\t<a href=\"https://github.com/AndyLizd\" target=\"_blank\">\r\n\t\t\t\t\t<box-icon type='logo' color='white' name='github' animation='flashing-hover'></box-icon>\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"icon\">\r\n\t\t\t\t<a href=\"https://www.linkedin.com/in/zhenda-li/\" target=\"_blank\">\r\n\t\t\t\t\t<box-icon type='logo' color='white' name='linkedin' animation='tada'></box-icon>\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"icon\">\r\n\t\t\t\t<a href=\"mailto: andylizd@outlook.com\" target=\"_blank\">\r\n\t\t\t\t\t<box-icon name='envelope-open' type='solid' color='white' animation='tada'></box-icon>\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n)\r\n\r\nconst renderFeatureSummary = (index) => (\r\n\t<div className='description'>\r\n\t\t<h1 \r\n\t\t\tstyle={{\r\n\t\t\t\tcolor: 'white', \r\n\t\t\t\tfontSize: '6vh', \r\n\t\t\t\tfontFamily: 'Big Shoulders Inline Text', \r\n\t\t\t\ttextAlign: 'center',\r\n\t\t\t\tmargin: 'auto',\r\n\t\t\t\tmarginBottom: '2vh',\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{config[index].head}\r\n\t\t</h1>\r\n\t\t<h6 style={{color: 'white'}}>{`- ${config[index].summary}`}</h6>\r\n\t</div>\r\n)\r\n\r\n\r\nfunction Main() {\r\n\t\r\n\t// headerState: -1, show name modules\r\n\tconst [headerState, setHeaderState] = useState(5);\r\n\t// jumpToState: -1, show home page\r\n\tconst [pageState, setPageState] = useState('features');\r\n\t// loadingState: 1, loading,\r\n\tconst [loadingState, setLoadingState] = useState(1);\r\n\t\r\n\tuseEffect(() => {\r\n\t\t\r\n\t\tgsap.defaults({overwrite: true});\r\n\r\n\t\tgsap.from('.page-container .intro .name', {duration: 1.5, opacity: 0.0, y: '-5vh', ease:'power4', stagger: 0.5});\r\n\t\tgsap.from('.page-container .intro h6', {duration: 2.0, opacity: 0, x:'3vw', ease:'slow', delay: 1.5});\r\n\t\tgsap.from('.page-container .intro .icon', {duration: 1.0, y:'-3vh', opacity: 0, stagger: 0.2, ease:'bounce', delay:0.5});\r\n\t\t\r\n\t\tfor (let i = 0; i < boxCount; i++){\r\n\t\t\tgsap.from(`.page-container .panel.top .box${i}`, {\r\n\t\t\t\tduration:2.0, opacity: 0.0, y:`${(2*(i%2)-1)*2.5}vh`, ease:'power4', delay: 4.0,\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsetTimeout(() => setLoadingState(0), 6000);\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t  if (headerState === -1)\r\n\t\tgsap.to('.page-container .intro', {duration: 2.0, opacity: 1})\r\n\t}, [headerState]);\r\n\r\n  return (\r\n\t\t<>\r\n\t\t{\r\n\t\t(pageState === 'features') ?\r\n\t\t< Features props={{startSection: config[headerState].name}}/>\r\n\t\t:\r\n\t\t<div className='page-container'>\r\n\t\t\t{/* intro, name & description */}\r\n\t\t\t<div className='intro'>\r\n\t\t\t\t{headerState === -1? renderName(): renderFeatureSummary(headerState)}\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"feature\">\r\n\t\t\t\t{/* box underneath */}\r\n\t\t\t\t{(loadingState === 1) ?\r\n\t\t\t\t\t<></>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<div className='panel hidden' onMouseOut={e => onMouseLeave(e, setHeaderState)}>\r\n\t\t\t\t\t\t{config.map((value, index) => \r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclassName={`box hidden`}\r\n\t\t\t\t\t\t\t\tstyle={{...defaultBoxStyle, cursor:'pointer'}}\r\n\t\t\t\t\t\t\t\tonMouseOver={e => onMouseEnter(e, index, setHeaderState)}\r\n\t\t\t\t\t\t\t\tonClick={e => onClickFeature(e, index, setPageState)}\r\n\t\t\t\t\t\t\t\tkey={index.toString()+' box hident'}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\r\n\t\t\t\t{/* box on top */}\r\n\t\t\t\t<div className='panel top'>\r\n\t\t\t\t{config.map((value, index) => \r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t...defaultBoxStyle, \r\n\t\t\t\t\t\t\t\tbackgroundColor: computeHslColor(defaultHue, 0, index, boxCount),\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tclassName={`box box${index}`}\r\n\t\t\t\t\t\t\tkey={index.toString()+' box'}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{/* <div className='thumbnail' \r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tbackgroundImage: `url(${config[index].thumbnail})`,\r\n\t\t\t\t\t\t\t\t\t// filter: 'grayscale(100%)'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/> */}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t(config[index].thumbanilType === 'video' ?\r\n\t\t\t\t\t\t\t\t\t<div className='thumbnail'>\r\n\t\t\t\t\t\t\t\t\t\t<video \r\n\t\t\t\t\t\t\t\t\t\t\tsrc={`${config[index].thumbnail}`} autoPlay muted loop \r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{height:'inherit'}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t<div className='thumbnail' \r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tbackgroundImage: `url(${config[index].thumbnail})`,\r\n\t\t\t\t\t\t\t\t\t\t\t// filter: 'grayscale(100%)'\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/> \r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t}\r\n\t\t</>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","G:\\projects\\personal web\\portfolio-react\\src\\boxConfig.js",[],"G:\\projects\\personal web\\portfolio-react\\src\\features\\glider.jsx",["66","67"],"import React, { useState } from \"react\";\r\nimport config from \"../boxConfig\";\r\nimport Template from \"./template\";\r\n\r\nimport \"./styles/template.css\";\r\nimport \"./styles/glider.css\";\r\n\r\n// config here\r\nconst featureName = \"glider\";\r\n\r\nconst index = config.findIndex((elem) => elem.name === featureName);\r\nconst headerFontFamily = config[index].headerFont;\r\n\r\nfunction Glider() {\r\n  return (\r\n    <div className=\"glider\">\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          bottom: 0,\r\n          right: 0,\r\n          height: \"45vh\",\r\n          width: \"48vw\",\r\n          // border: \"0.1em solid white\",\r\n        }}\r\n      >\r\n        <Template props={{ index, headerFontFamily }}></Template>\r\n      </div>\r\n      <img\r\n        src=\"img/glider/glider.jpg\"\r\n        alt=\"glider image\"\r\n        style={{\r\n          position: \"absolute\",\r\n          left: \"5vw\",\r\n          top: \"5vh\",\r\n          borderRadius: \"0.0em\",\r\n          height: \"85vh\",\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Glider;\r\n",["68","69"],"G:\\projects\\personal web\\portfolio-react\\src\\features\\sfdispatch.jsx",["70","71"],"import React, { useState } from \"react\";\r\n\r\nimport config from '../boxConfig';\r\n\r\nimport \"./styles/template.css\";\r\nimport './styles/sfdispatch.css';\r\n\r\nconst index = config.findIndex(elem => elem.name === 'sfdispatch');\r\n\r\nfunction SFdispatch() {\r\n  return (\r\n    <div>\r\n\t\t\t<h1>\r\n\t\t\t\thello world.\r\n\t\t\t</h1>\r\n    </div>        \r\n  );\r\n}\r\n\r\nexport default SFdispatch;","G:\\projects\\personal web\\portfolio-react\\src\\features\\recommender.jsx",["72","73"],"import React, { useState } from \"react\";\r\nimport config from '../boxConfig';\r\n\r\nimport \"./styles/template.css\";\r\nimport './styles/recommender.css';\r\n\r\nconst index = config.findIndex(elem => elem.name === 'recommender');\r\n\r\nfunction Recommender() {\r\n  return (\r\n    <div>\r\n\t\t\t<h1>\r\n\t\t\t\thello world.\r\n\t\t\t</h1>\r\n    </div>        \r\n  );\r\n}\r\n\r\nexport default Recommender;\r\n","G:\\projects\\personal web\\portfolio-react\\src\\features\\ganart.jsx",["74","75"],"import React, { useState } from \"react\";\r\nimport config from '../boxConfig';\r\n\r\nimport \"./styles/template.css\";\r\nimport './styles/ganart.css';\r\n\r\nconst index = config.findIndex(elem => elem.name === 'ganart');\r\n\r\nfunction GanArt() {\r\n  return (\r\n    <div>\r\n\t\t\t<h1>\r\n\t\t\t\thello world.\r\n\t\t\t</h1>\r\n    </div>        \r\n  );\r\n}\r\n\r\nexport default GanArt;\r\n","G:\\projects\\personal web\\portfolio-react\\src\\features\\starlink.jsx",["76","77"],"import React, { useState } from \"react\";\r\n\r\nimport config from '../boxConfig';\r\n\r\nimport \"./styles/template.css\";\r\nimport './styles/starlink.css';\r\n\r\nconst index = config.findIndex(elem => elem.name === 'starlink');\r\n\r\nfunction Starlink() {\r\n  return (\r\n    <div>\r\n\t\t\t<h1>\r\n\t\t\t\thello world.\r\n\t\t\t</h1>\r\n    </div>        \r\n  );\r\n}\r\n\r\nexport default Starlink;\r\n","G:\\projects\\personal web\\portfolio-react\\src\\features\\template.jsx",["78"],"import React, { useState } from \"react\";\r\nimport config from '../boxConfig';\r\n\r\nimport \"./styles/template.css\";\r\nimport './styles/template.css';\r\n\r\n\r\nfunction Template({props}) {\r\n\r\n  const fontFamily = 'Open Sans Condensed'; //props.headerFontFamily;\r\n\r\n  return (\r\n    <div className='text'>\r\n      <h1 className='header' style={{fontFamily: fontFamily, fontSize: '8vh'}}>\r\n        {config[props.index].head}\r\n      </h1>\r\n      <ul className='detail-list'>\r\n        {config[props.index].details.map((line, dummy) => (\r\n          <li className='detail' key={`${config[props.index].name} details ${dummy}`}> {'+ ' + line} </li>\r\n        ))}\r\n      </ul>\r\n    </div>       \r\n  );\r\n}\r\n\r\nexport default Template;\r\n","G:\\projects\\personal web\\portfolio-react\\src\\features\\features.jsx",["79","80","81"],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":2,"column":16,"nodeType":"88","messageId":"89","endLine":2,"endColumn":25},{"ruleId":"90","severity":1,"message":"91","line":141,"column":5,"nodeType":"92","endLine":141,"endColumn":59},{"ruleId":"90","severity":1,"message":"91","line":146,"column":5,"nodeType":"92","endLine":146,"endColumn":70},{"ruleId":"90","severity":1,"message":"91","line":151,"column":5,"nodeType":"92","endLine":151,"endColumn":60},{"ruleId":"86","severity":1,"message":"93","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":25},{"ruleId":"94","severity":1,"message":"95","line":29,"column":7,"nodeType":"92","endLine":39,"endColumn":9},{"ruleId":"82","replacedBy":"96"},{"ruleId":"84","replacedBy":"97"},{"ruleId":"86","severity":1,"message":"93","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":25},{"ruleId":"86","severity":1,"message":"98","line":8,"column":7,"nodeType":"88","messageId":"89","endLine":8,"endColumn":12},{"ruleId":"86","severity":1,"message":"93","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":25},{"ruleId":"86","severity":1,"message":"98","line":7,"column":7,"nodeType":"88","messageId":"89","endLine":7,"endColumn":12},{"ruleId":"86","severity":1,"message":"93","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":25},{"ruleId":"86","severity":1,"message":"98","line":7,"column":7,"nodeType":"88","messageId":"89","endLine":7,"endColumn":12},{"ruleId":"86","severity":1,"message":"93","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":25},{"ruleId":"86","severity":1,"message":"98","line":8,"column":7,"nodeType":"88","messageId":"89","endLine":8,"endColumn":12},{"ruleId":"86","severity":1,"message":"93","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":25},{"ruleId":"86","severity":1,"message":"99","line":17,"column":7,"nodeType":"88","messageId":"89","endLine":17,"endColumn":14},{"ruleId":"100","severity":1,"message":"101","line":77,"column":5,"nodeType":"102","endLine":77,"endColumn":7,"suggestions":"103"},{"ruleId":"104","severity":1,"message":"105","line":170,"column":6,"nodeType":"92","endLine":178,"endColumn":8},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'useState' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",["106"],["107"],"'index' is assigned a value but never used.","'onClick' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.startSection' and 'refAggregate'. Either include them or remove the dependency array.","ArrayExpression",["108"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},"Update the dependencies array to be: [props.startSection, refAggregate]",{"range":"111","text":"112"},[2167,2169],"[props.startSection, refAggregate]"]